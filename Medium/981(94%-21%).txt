
class TimeMap {
    private Map<String, List<Pair<Integer, String>>> map;

    public TimeMap() {
        map = new HashMap<>();
    }

    public void set(String key, String value, int timestamp) {
        map.putIfAbsent(key, new ArrayList<>());
        map.get(key).add(new Pair<>(timestamp, value));
    }

    public String get(String key, int timestamp) {
        List<Pair<Integer, String>> values = map.get(key);
        if (values == null || values.get(0).first > timestamp) {
            return "";
        } else if (values.get(values.size() - 1).first <= timestamp) {
            return values.get(values.size() - 1).second;
        } else {
            int i = 0, j = values.size(), mid;
            while (i <= j) {
                mid = (i + j) / 2;
                if (values.get(mid).first > timestamp) {
                    j = mid - 1;
                } else if (values.get(mid).first < timestamp) {
                    i = mid + 1;
                } else {
                    return values.get(mid).second;
                }
            }
            return values.get(j).second;
        }
    }

    private class Pair<F, S> {
        private F first;
        private S second;

        public Pair(F first, S second) {
            this.first = first;
            this.second = second;
        }
    }
}

/**
 * Your TimeMap object will be instantiated and called as such:
 * TimeMap obj = new TimeMap();
 * obj.set(key,value,timestamp);
 * String param_2 = obj.get(key,timestamp);
 */